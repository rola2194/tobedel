{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,C,E,C,E,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,G,C,C,E,C,O,C,C,E,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,O,C,K,E,E,S,C,K,E,E,S,C,K,E,E,C,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,I,E,E,E,A,C,U,O,S,A,a,O,O,O,O,C,E,A,Y,O,Q,O,G,E,O,W,O,C,E,C,E,C,M,C,S,C,C,C,C,C,C,C,ECAA,IAAA,EAAA,EAAA,uBAOA,EAAA,EAAA,iBAEA,IAAM,EAAc,SAAS,aAAa,CAAC,UACrC,EAAoB,SAAS,cAAc,CAAC,eAC5C,EAAY,SAAS,aAAa,CAAC,kBACnC,EAAa,SAAS,aAAa,CAAC,aAG1C,AAAA,CAAA,EAAA,EAAA,kBAAkB,AAAlB,EAAmB,EAAA,IAAG,CAAG,AAAC,IACpB,GAEF,OAAO,IAAI,CAAG,EAAK,GAAG,CACtB,EAAU,KAAK,CAAC,OAAO,CAAG,OAC1B,EAAW,KAAK,CAAC,OAAO,CAAG,QAC3B,QAAQ,GAAG,CAAC,qBAAsB,OAAO,IAAI,IAG7C,OAAO,IAAI,CAAG,KACd,EAAU,KAAK,CAAC,OAAO,CAAG,QAC1B,EAAW,KAAK,CAAC,OAAO,CAAG,OAC3B,QAAQ,GAAG,CAAC,sBAEhB,GAEA,EAAY,gBAAgB,CAAC,QAAS,UACpC,GAAI,CACF,MAAM,AAAA,CAAA,EAAA,EAAA,iBAAgB,AAAhB,EAAkB,EAAA,IAAG,CAC7B,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,oBAAqB,EACrC,CACF,GAGA,EAAkB,gBAAgB,CAAC,QAAS,KAC1C,AAAA,CAAA,EAAA,EAAA,eAAe,AAAf,EAAgB,EAAA,IAAG,CAAG,EAAA,cAAc,CACtC,E,E,C,sB,Q,gB,O,E,E,C,Q,C,Q,oB,C","sources":["<anon>","main.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (\n  modules,\n  entry,\n  mainEntry,\n  parcelRequireName,\n  externals,\n  distDir,\n  publicUrl,\n  devServer\n) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var importMap = previousRequire.i || {};\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        if (externals[name]) {\n          return externals[name];\n        }\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.require = nodeRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.distDir = distDir;\n  newRequire.publicUrl = publicUrl;\n  newRequire.devServer = devServer;\n  newRequire.i = importMap;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  // Only insert newRequire.load when it is actually used.\n  // The code in this file is linted against ES5, so dynamic import is not allowed.\n  // INSERT_LOAD_HERE\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n    }\n  }\n})({\"iXJmq\":[function(require,module,exports,__globalThis) {\nvar _initializationJs = require(\"./initialization.js\");\nvar _auth = require(\"firebase/auth\");\nconst loginButton = document.querySelector(\"button\");\nconst googleLoginButton = document.getElementById(\"googleLogin\");\nconst initialUI = document.querySelector(\".initial-login\");\nconst loggedInUI = document.querySelector(\".loggedin\");\n// Listen for auth state changes\n(0, _auth.onAuthStateChanged)((0, _initializationJs.auth), (user)=>{\n    if (user) {\n        // User is signed in\n        window.user = user.uid;\n        initialUI.style.display = \"none\";\n        loggedInUI.style.display = \"block\";\n        console.log(\"User is signed in:\", window.user);\n    } else {\n        // User is signed out\n        window.user = null;\n        initialUI.style.display = \"block\";\n        loggedInUI.style.display = \"none\";\n        console.log(\"User is signed out\");\n    }\n});\nloginButton.addEventListener(\"click\", async ()=>{\n    try {\n        await (0, _initializationJs.signInAnonymously)((0, _initializationJs.auth));\n    } catch (error) {\n        console.error(\"Error signing in:\", error);\n    }\n});\n// Add Google login functionality\ngoogleLoginButton.addEventListener(\"click\", ()=>{\n    (0, _initializationJs.signInWithPopup)((0, _initializationJs.auth), (0, _initializationJs.googleProvider));\n});\n\n},{\"./initialization.js\":\"vw3sS\",\"firebase/auth\":\"dZ6yw\"}]},[\"iXJmq\"], \"iXJmq\", \"parcelRequire94c2\", {})\n\n//# sourceMappingURL=17-prova-refactor-laspesaconmini.78b616f1.js.map\n","import {\n  auth,\n  signInAnonymously,\n  googleProvider,\n  signInWithPopup,\n  signInWithRedirect,\n} from \"./initialization.js\";\nimport { onAuthStateChanged } from \"firebase/auth\";\n\nconst loginButton = document.querySelector(\"button\");\nconst googleLoginButton = document.getElementById(\"googleLogin\");\nconst initialUI = document.querySelector(\".initial-login\");\nconst loggedInUI = document.querySelector(\".loggedin\");\n\n// Listen for auth state changes\nonAuthStateChanged(auth, (user) => {\n  if (user) {\n    // User is signed in\n    window.user = user.uid;\n    initialUI.style.display = \"none\";\n    loggedInUI.style.display = \"block\";\n    console.log(\"User is signed in:\", window.user);\n  } else {\n    // User is signed out\n    window.user = null;\n    initialUI.style.display = \"block\";\n    loggedInUI.style.display = \"none\";\n    console.log(\"User is signed out\");\n  }\n});\n\nloginButton.addEventListener(\"click\", async () => {\n  try {\n    await signInAnonymously(auth);\n  } catch (error) {\n    console.error(\"Error signing in:\", error);\n  }\n});\n\n// Add Google login functionality\ngoogleLoginButton.addEventListener(\"click\", () => {\n  signInWithPopup(auth, googleProvider);\n});\n"],"names":["modules","entry","mainEntry","parcelRequireName","externals","distDir","publicUrl","devServer","globalObject","globalThis","self","window","global","previousRequire","importMap","i","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","length","mainExports","define","amd","__globalThis","_initializationJs","_auth","loginButton","document","querySelector","googleLoginButton","getElementById","initialUI","loggedInUI","onAuthStateChanged","auth","user","uid","style","display","console","log","addEventListener","signInAnonymously","error","signInWithPopup","googleProvider"],"version":3,"file":"17-prova-refactor-laspesaconmini.78b616f1.js.map"}